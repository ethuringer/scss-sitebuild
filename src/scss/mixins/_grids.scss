@use "../functions/var" as *;
@use "../functions/convert-string-to-number" as *;
@use "../variables/config" as *;
@use "breakpoints" as *;


@mixin generate-container {
    .#{var(container-classname)} {
        box-sizing: border-box;
        display: flex;
        justify-content: space-between;
        flex: 0 1 auto;
        flex-flow: row wrap;
        margin: 0 auto;
        padding: var(container-padding-default);
        position: relative;
        max-width: 992px;

        @include desktop-up {
            padding: var(container-padding-desktop);
        }
    }
}

@mixin column-default-style {
    .#{var(container-classname)} > [class^="#{var(column-classname)}"] {
        box-sizing: border-box;
        padding: var(column-padding-default);
        position: relative;

        @include desktop-up {
            padding: var(column-padding-desktop);
        }
    }
}

@mixin set-column-width($viewport, $column-count) {
    $width: 100% * $column-count / var(grid-size);
    $number: convert-string-to-number($viewport);

    @if $number == 1 {
        width: $width;
    }

    @else if $number == 3 {
        @include desktop-up {
            width: $width;
        }
    }
}

@mixin generate-columns {
    $postfixes: var(column-postfix);
    $grid-size: var(grid-size);

    @each $name, $postfix in $postfixes {
        @for $i from 1 through $grid-size {
            .#{var(column-classname)}-#{$postfix}-#{$i} {
                @include set-column-width($postfix, $i);
            }
        }
    }
}